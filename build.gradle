plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "maven-publish"
    id "io.github.juuxel.loom-quiltflower" version "1.+"
    id "org.quiltmc.quilt-mappings-on-loom" version "4.2.+"
}

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.19.2-3.1.0'
group = 'trofers'
archivesBaseName = 'trofers'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

sourceSets.main.resources { 
  srcDir 'src/generated/resources'
}

loom {
    runs {
        datagen {
            client()

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=trofers"

            property "trofers.data.existingData", file("src/main/resources").absolutePath

            runDir "build/datagen"
        }
    }
}


repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://maven.blamejared.com/"
    }
    maven {
        url 'https://maven.covers1624.net/'
    }
    maven {
        url 'https://dvs1.progwml6.com/files/maven'
    }

    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
}

dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"

    mappings loom.officialMojangMappings()

    // dev environment
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    include(modImplementation(fabricApi.module("fabric-data-generation-api-v1", project.fabric_version)))

    modRuntimeOnly("maven.modrinth:lazydfu:0.1.2")
    // modRuntimeOnly("com.github.Andrew6rant:InventoryTabs:inventorytabs-${inventorytabs_version}")

    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    modImplementation(include("io.github.fabricators_of_create.Porting-Lib:porting-lib:${project.port_lib_version}+${project.mc_version}"))
    modImplementation(include("net.minecraftforge:forgeconfigapiport-fabric:${project.config_api_version}"))
    modImplementation("com.github.AlphaMode:fakeconfig:master-SNAPSHOT") { exclude(group: "net.fabricmc.fabric-api") }
    modImplementation("com.github.AlphaMode:fakeconfigtoml:master-SNAPSHOT") { exclude(group: "net.fabricmc.fabric-api") }

    modCompileOnly(("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    modCompileOnly "mezz.jei:jei-${mc_version}-fabric-api:${jei_version}"
    modRuntimeOnly "mezz.jei:jei-${mc_version}-fabric:${jei_version}"

//    implementation fg.deobf("curse.maven:citadel-331936:3987892")
//    implementation fg.deobf("curse.maven:alexsmobs-426558:3994223")

//    compileOnly fg.deobf("com.teamcofh:cofh_core:1.18.2-1.6.3.19")
//    compileOnly fg.deobf("com.teamcofh:thermal_foundation:1.18.2-1.6.2.27")

    // compileOnly fg.deobf("slimeknights.mantle:Mantle:1.18.2-1.9.27")
    // compileOnly fg.deobf("slimeknights.tconstruct:TConstruct:1.18.2-3.5.1.32")

//    implementation fg.deobf("vazkii.autoreglib:AutoRegLib:1.8-54.115")
//    implementation fg.deobf("vazkii.quark:Quark:3.3-372.2483")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "trofers",
                "Specification-Vendor": "ochotonida",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "ochotonida",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar.finalizedBy('remapJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
